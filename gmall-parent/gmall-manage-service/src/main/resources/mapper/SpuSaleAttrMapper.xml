<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<!--namespace表示接口的全路径-->
<mapper namespace="com.atguigu.gmall.manageservice.mapper.SpuSaleAttrMapper">

    <!--resultMap：返回的结果集
        id表示唯一表示，
        type：返回的数据类型
    -->
    <resultMap id="spuSaleAttrMap" type="com.atguigu.gmall.bean.SpuSaleAttr" autoMapping="true">
        <!--   id表示主键
                property:表示实体类中的属性名
                colum：表示表中的字段/列名 (sql语句查出来的)
         -->
        <id property="id" column="id"></id>

        <!--    result:普通字段   如果使用了autoMapping的话就不用这样手动映射 -->
        <!--        <result></result>-->

        <!--    mybatis 配置一对多    -->
        <!--    ofType: 返回集合的属性对象   -->
        <collection property="spuSaleAttrValueList" ofType="com.atguigu.gmall.bean.SpuSaleAttrValue" autoMapping="true">
            <id property="id" column="sale_attr_value_id"></id>
        </collection>

        <!--   多对一     -->
        <!--        <association property=""></association>-->


    </resultMap>

    <!--  id:方法名-->
    <!--
        #{}:相当于是一个占位符，防止sql注入
        ${}:字符注入

        如果单纯只用mybatis 传入多个参数可以使用数字0,1,2代理传递的参数顺序

        通用mapper 如果多个不能这样用，但是一个参数可以用0
    -->
    <select id="selectSpuSaleAttrList" resultMap="spuSaleAttrMap">
        SELECT ssa.id , ssa.spu_id,ssa.sale_attr_name,ssa.sale_attr_id,ssav.id sale_attr_value_id,ssav.sale_attr_value_name from 	spu_sale_attr ssa INNER JOIN spu_sale_attr_value ssav ON ssa.sale_attr_id = ssav.sale_attr_id AND ssa.spu_id=ssav.spu_id WHERE ssa.spu_id=#{0}
    </select>

</mapper>